<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
<!--	<parent>-->
<!--		<groupId>com.xzll</groupId>-->
<!--		<artifactId>study</artifactId>-->
<!--		<version>0.0.1-SNAPSHOT</version>-->
<!--		<relativePath>../pom.xml</relativePath> &lt;!&ndash; lookup parent from repository &ndash;&gt;-->
<!--	</parent>-->

	<groupId>com.xzll</groupId>
	<artifactId>study-agent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>study-agent</name>
	<description>java探针学习</description>

	<dependencies>

		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.24.1-GA</version>
		</dependency>

<!--		<dependency>-->
<!--			<groupId>com.xzll</groupId>-->
<!--			<artifactId>study-monitor</artifactId>-->
<!--			<version>0.0.1-SNAPSHOT</version>-->
<!--			<type>jar</type>-->
<!--&lt;!&ndash;			<exclusions>&ndash;&gt;-->
<!--&lt;!&ndash;				<exclusion>&ndash;&gt;-->
<!--&lt;!&ndash;					<groupId>*</groupId>&ndash;&gt;-->
<!--&lt;!&ndash;					<artifactId>*</artifactId>&ndash;&gt;-->
<!--&lt;!&ndash;				</exclusion>&ndash;&gt;-->
<!--&lt;!&ndash;			</exclusions>&ndash;&gt;-->
<!--		</dependency>-->


		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.7.0</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>

		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging-api</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.9.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/cn.hutool/hutool-core -->
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-core</artifactId>
			<version>5.8.22</version>
		</dependency>



<!--		<dependency>-->
<!--			<groupId>com.xzll</groupId>-->
<!--			<artifactId>study-common</artifactId>-->
<!--			<version>0.0.1-SNAPSHOT</version>-->
<!--			-->
<!--		</dependency>-->
<!--		########## -->

		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.5.6</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.46</version>
		</dependency>
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus</artifactId>
			<version>3.5.0</version>
		</dependency>


	</dependencies>


	<build>
		<plugins>
<!--			<plugin>-->
<!--			<groupId>org.apache.maven.plugins</groupId>-->
<!--			<artifactId>maven-jar-plugin</artifactId>-->
<!--			<version>3.1.0</version>-->
<!--			<configuration>-->
<!--				<archive>-->
<!--					&lt;!&ndash;自动添加META-INF/MANIFEST.MF &ndash;&gt;-->
<!--					<manifest>-->
<!--						<addClasspath>true</addClasspath>-->
<!--					</manifest>-->
<!--					<manifestEntries>-->
<!--&lt;!&ndash;						<Premain-Class>com.xzll.agent.config.JdkDateAgentTest</Premain-Class>&ndash;&gt;-->
<!--&lt;!&ndash;						<Premain-Class>com.xzll.agent.config.MysqlFieldCryptByExecuteBodyAgent</Premain-Class>&ndash;&gt;-->
<!--&lt;!&ndash;						<Agent-Class>com.xzll.agent.config.CompletableFutureAgent</Agent-Class>&ndash;&gt;-->
<!--&lt;!&ndash;						<Boot-Class-Path>study-agent-0.0.1-SNAPSHOT.jar</Boot-Class-Path>&ndash;&gt;-->
<!--&lt;!&ndash;						<Can-Redefine-Classes>true</Can-Redefine-Classes>&ndash;&gt;-->
<!--&lt;!&ndash;						<Can-Retransform-Classes>true</Can-Retransform-Classes>&ndash;&gt;-->
<!--&lt;!&ndash;						<Can-Redefine-Classes>false</Can-Redefine-Classes>&ndash;&gt;-->
<!--&lt;!&ndash;						<Can-Retransform-Classes>false</Can-Retransform-Classes>&ndash;&gt;-->
<!--&lt;!&ndash;						<Can-Set-Native-Method-Prefix>false</Can-Set-Native-Method-Prefix>&ndash;&gt;-->
<!--					</manifestEntries>-->
<!--				</archive>-->
<!--			</configuration>-->
<!--			</plugin>-->

			<plugin>
<!--				解决 什么什么 goal编译失败的方法-->
<!--				https://stackoverflow.com/questions/42525139/maven-build-compilation-error-failed-to-execute-goal-org-apache-maven-plugins-->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>11</source>
					<target>11</target>
<!--					<release>11</release>-->
				</configuration>
			</plugin>

			<!-- Maven Assembly Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<!-- 将所有的依赖全部打包进jar -->
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<!-- MainClass in mainfest make a executable jar -->
					<archive>

						<manifest>
<!--							<mainClass>com.xzll.agent.config.MysqlFieldCryptByExecuteBodyAgent</mainClass>-->
							<addClasspath>true</addClasspath>
<!--							<premainClass>com.xzll.agent.config.MysqlFieldCryptByExecuteBodyAgent</premainClass>-->
						</manifest>
						<manifestEntries>
							<!--设置jar的作者和时间-->
							<Built-By>黄壮壮</Built-By>
							<Built-Date>${maven.build.timestamp}</Built-Date>

							<!--指定premain方法（静态加载时会调用的方法）的入口类，也就是说告诉jvm， premain方法在哪个类中-->
<!--							<Premain-Class>com.xzll.agent.config.JdkDateAgentTest</Premain-Class>-->
							<Premain-Class>com.xzll.agent.config.MysqlFieldCryptByExecuteBodyAgent</Premain-Class>

							<!--该属性设置为 true 时表示：允许已加载的类被重新转换（retransform）。这意味着 Java Agent 可以在运行时修改已经加载的类的字节码，而不需要重新启动应用或 JVM
							注意，如果此属性设置为 false 在执行main方法且设置-jaavaagent.jar时，将会执行抛出异常 ：java.lang.instrument ASSERTION FAILED ***: "result" with message agent load/premain call failed at src/java.instrument/share/native/libinstrument/JPLISAgent.c line: 422
							-->
							<Can-Retransform-Classes>true</Can-Retransform-Classes>

							<!--该属性设置为 true 时表示：允许 Java Agent 在运行时重新定义（也就是完全替换）已加载的类的字节码，这里我们没用到这个暂时设置成false,用到时在打开-->
							<Can-Redefine-Classes>false</Can-Redefine-Classes>

							<!--该属性设置为 true 时表示：允许 Java Agent 在运行时动态地为 JNI (Java Native Interface) 方法设置前缀。这项能力主要用于修改或拦截对本地方法的调用，这里我们没用到也设置为false -->
							<Can-Set-Native-Method-Prefix>false</Can-Set-Native-Method-Prefix>

							<!--指定agentmain方法的入口类（动态加载时将会调用 agentmain方法）-->
							<Agent-Class>com.xzll.agent.config.attach.AttachAgent</Agent-Class>

<!--							<Premain-Class>com.xzll.agent.config.MysqlFieldCryptByExecuteBodyAgent</Premain-Class>-->
<!--							<Premain-Class>com.xzll.agent.config.CompletableFutureAgent</Premain-Class>-->
<!--							<Premain-Class>com.xzll.agent.config.MysqlFieldCryptAgent</Premain-Class>-->
<!--							<Premain-Class>com.xzll.agent.config.MysqlFieldCryptBySelectAfterAgent</Premain-Class>-->
<!--							<Premain-Class>com.xzll.agent.config.MysqlFieldCryptByExecuteAgent</Premain-Class>-->
<!--							<Premain-Class>com.xzll.agent.config.MysqlFieldCryptByExecuteBodyAgent</Premain-Class>-->
<!--							<Premain-Class>com.xzll.agent.config.MysqlFieldCryptAtLineNumAgent</Premain-Class>-->
<!--													<Agent-Class>com.xzll.agent.config.JdkDateAgentTest</Agent-Class>-->
<!--							如果不设置这个 很可能各种类找不到或者 报错com.sun.tools.attach.AgentLoadException: Agent JAR not found or no Agent-Class attribute-->
<!--							<Boot-Class-Path>study-agent-0.0.1-SNAPSHOT-jar-with-dependencies.jar</Boot-Class-Path>-->
						</manifestEntries>

						<!--如果不在pom中设置以上manifestEntries 这些信息，那么也可以在手动建一个MANIFEST.MF文件在 src/main/resources/META-INF/目录中，并将这些信息手动写进文件，
						然后让assembly打包时使用我们自己手写的这个MANIFEST.MF文件（如下的 manifestFile 标签就是告诉插件使用我们自己写的MANIFEST.MF文件），但是那样容易出错所以我们最好是在pom中设置然后让assembly插件帮我们生成 -->

						<!--<manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile>-->
					</archive>
				</configuration>
				<executions>
					<!-- 配置执行器 -->
					<execution>
						<id>make-assembly</id>
						<!-- 绑定到package命令的生命周期上 -->
						<phase>package</phase>
						<goals>
							<!-- 只运行一次 -->
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-shade-plugin</artifactId>-->
<!--				<version>3.2.4</version>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<phase>package</phase>-->
<!--						<goals>-->
<!--							<goal>shade</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<transformers>-->
<!--								<transformer-->
<!--										implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">-->
<!--									<manifestEntries>-->
<!--										<Premain-Class>com.xzll.agent.config.ForkJoinPoolMonitorAgentTest</Premain-Class>-->
<!--										<Agent-Class>com.xzll.agent.config.ForkJoinPoolMonitorAgentTest</Agent-Class>-->
<!--										<Can-Retransform-Classes>true</Can-Retransform-Classes>-->
<!--										<Can-Redefine-Classes>true</Can-Redefine-Classes>-->
<!--									</manifestEntries>-->
<!--								</transformer>-->
<!--							</transformers>-->
<!--							<filters>-->
<!--								<filter>-->
<!--									<artifact>com.xzll:study-monitor</artifact>-->
<!--									<includes>-->
<!--										<exclude>com/xzll/monitor/config/util/ForkJoinMonitorUtil.class</exclude>-->
<!--									</includes>-->
<!--								</filter>-->
<!--							</filters>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->

		</plugins>
	</build>
</project>




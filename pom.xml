<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.13.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.xzll</groupId>
    <artifactId>study</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>study</name>
    <description>个人学习项目</description>

	<!--资源管理 为了release插件配置的 (release会提交代码到gitlib所以需要在此配置gitlib地址)-->
	<scm>
		<!--可在浏览器访问的gitlib地址-->
		<url>https://gitlab.xxx.com/xxx/xxx/tree/master</url>
		<!--从git仓库读取-->
		<connection>scm:git:https://gitlab.xxx.com/xxx/xxx/xxx.git</connection>
		<!--往git仓库push-->
		<developerConnection>scm:git:https://gitlab.xxx.com/xxx/xxx.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<!--发布jra包的地址-->
	<distributionManagement>
		<snapshotRepository>
			<id>xxx-snapshots</id>
			<url>https://nexus.xxx.com/repository/maven-snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>xxx-releases</id>
			<url>https://nexus.xxx.com/repository/maven-releases/</url>
		</repository>
	</distributionManagement>

    <properties>
		<!--版本统一管理-->
        <java.version>1.8</java.version>
        <spring.cloud.version>Greenwich.SR6</spring.cloud.version>
        <spring.cloud.stream.version>Fishtown.SR4</spring.cloud.stream.version>
        <alibaba.cloud.version>2.1.4.RELEASE</alibaba.cloud.version>
        <fastjson.version>1.2.46</fastjson.version>
        <sleuth.version>2.1.4.RELEASE</sleuth.version>
		<mybatis-spring-boot-starter.version>2.1.4</mybatis-spring-boot-starter.version>
		<mysql.version>8.0.23</mysql.version>
		<pagehelper-spring-boot-starter.version>1.3.0</pagehelper-spring-boot-starter.version>
		<mybatis-plus.version>3.5.0</mybatis-plus.version>

        <package-type>false</package-type>
		<!--release时候的tag前缀-->
		<tagPrefix>dev</tagPrefix>
		<maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
    </properties>

    <packaging>pom</packaging>

    <modules>
        <module>study-common</module>
        <module>study-api</module>
        <module>study-admin</module>
        <module>study-consumer</module>
        <module>study-auth</module>
        <module>study-gateway</module>
        <module>study-order</module>
        <module>study-starter</module>
<!--        <module>study-starter</module>-->
    </modules>

    <dependencies>



        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
        </dependency>

		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-boot-starter</artifactId>
			<version>3.5.0</version>
		</dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

		<!--es-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
		</dependency>


		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson</artifactId>
			<version>3.16.0</version>
		</dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
            <version>1.18.0</version>
        </dependency>

        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.6.6</version>
        </dependency>

		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.1.4</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.23</version>
		</dependency>
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
			<version>1.3.0</version>
		</dependency>

        <!--guava 依赖-->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>27.0.1-jre</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.7.0</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.7</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2</version>
        </dependency>
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>3.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.2</version>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>1.4.0</version>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging-api</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>1.6</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.9.0</version>
        </dependency>


        <dependency>
            <groupId>org.apache.rocketmq</groupId>
            <artifactId>rocketmq-client</artifactId>
            <!--注意client 版本 大于4.6.0会报错 RocketMQ invokeSync call timeout， 另外记录下 目前我的server是4.8.0的-->
            <version>4.5.0</version>
        </dependency>
		<!--netty线程模型的概念学习与演示-->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
			<version>4.1.34.Final</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
			<version>2.1.12.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>transmittable-thread-local</artifactId>
			<version>2.14.2</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>log4j2-ttl-thread-context-map</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
				</exclusion>
			</exclusions>
			<version>1.4.0</version>
			<scope>runtime</scope>
		</dependency>








	</dependencies>


    <build>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>utf-8</encoding>
                    <!-- 需要指定这玩意 否则springboot将使用 @占位符  -->
                    <useDefaultDelimiters>true</useDefaultDelimiters>
					<!--用于打胖jar 即直接可以执行的jar包 一般会比较大，如果只想打瘦包只包含class文件的话 则指定为false(该应用场景一般是非springboot项目)-->
					<skip>${package-type}</skip>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<inherited>true</inherited>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!--用于发布新版本时候自动打tag,自动递增版本号,自动提交到gitlib非常有用哈哈-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>3.0.0-M1</version>
				<configuration>
					<!--动作-->
					<goals>deploy</goals>

					<!--该用户名密码需要配置在maven setting文件中 -->
					<!--如下
					<profiles>
					<profile>
						<id>仓库id</id>
						<repositories>
							<repository>
								<id>xxx-public</id>
								<url>https://nexus.xxx.com/repository/maven-public/</url>
								<releases><enabled>true</enabled></releases>
								<snapshots><enabled>true</enabled></snapshots>
							</repository>
						</repositories>
						<pluginRepositories>
							<pluginRepository>
								<id>xxx-public</id>
								<url>https://nexus.xxx.com/repository/maven-public/</url>
								<releases><enabled>true</enabled></releases>
								<snapshots><enabled>true</enabled></snapshots>
							</pluginRepository>
						</pluginRepositories>
						<properties>
							<release.username>huangzhuangzhuang</release.username>
							<release.password>123456</release.password>
						</properties>
					</profile>
				</profiles>
				-->
					<username>${release.username}</username>
					<password>${release.password}</password>
					<!--表示当发布父包时候 引用父pom的子pom会自动升级版本号-->
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources/</directory>
                <!--会使用profiles中的properties 来替换 includes为true文件的变量占位符 -->
                <filtering>true</filtering>
                <includes>
                    <include>**/*.yml</include>
                    <include>**/*.yaml</include>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.json</include>
                    <include>**/*.pem</include>
                    <include>**/*.jks</include>

                </includes>
                <excludes>
                    <exclude>*.jks</exclude>
                </excludes>
            </resource>
        </resources>

    </build>

    <!--添加依赖统一管理 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${alibaba.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-stream-dependencies</artifactId>
                <version>${spring.cloud.stream.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>2.1.3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-sleuth</artifactId>
                <version>${sleuth.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <!--默认激活dev环境-->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--替换bootstrap.properties中的 ${nacos.serverAddress}变量-->
                <nacos.serverAddr>127.0.0.1:8848</nacos.serverAddr>
                <nacos.config.namespace>f407f750-961e-44f2-80d7-6983374ad1e0</nacos.config.namespace>
                <nacos.discovery.namespace>932a9da5-fdd6-4747-bc13-a3e97b089281</nacos.discovery.namespace>
                <boot.profile>dev</boot.profile>
            </properties>
        </profile>

        <profile>
            <id>test</id>
            <activation>

            </activation>
            <properties>
                <!--模拟test环境-->
                <!--替换bootstrap.properties中的 ${nacos.serverAddr}变量-->
                <nacos.serverAddr>127.0.0.1:8849</nacos.serverAddr>
                <!--根据test的命名空间 填写此处的命名空间ID-->
                <!--                <nacos.config.namespace>f407f750-961e-44f2-80d7-6983374ad1e0</nacos.config.namespace>-->
                <!--                <nacos.discovery.namespace>932a9da5-fdd6-4747-bc13-a3e97b089281</nacos.discovery.namespace>-->
                <boot.profile>test</boot.profile>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <activation>
            </activation>
            <properties>
                <!--模拟prod环境-->
                <!--替换bootstrap.properties中的 ${nacos.serverAddr}变量-->
                <nacos.serverAddr>127.0.0.1:8850</nacos.serverAddr>
                <!--根据prod的命名空间 填写此处的命名空间ID-->
                <!--                <nacos.config.namespace>f407f750-961e-44f2-80d7-6983374ad1e0</nacos.config.namespace>-->
                <!--                <nacos.discovery.namespace>932a9da5-fdd6-4747-bc13-a3e97b089281</nacos.discovery.namespace>-->
                <boot.profile>prod</boot.profile>
            </properties>
        </profile>
    </profiles>

</project>
